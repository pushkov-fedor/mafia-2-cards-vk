{"version":3,"sources":["routes.js","pages/Home.page.js","constants.js","api.js","components/ErrorSnackbar.js","pages/CreateGame.page.js","pages/JoinGame.page.js","pages/WaitGame.page.js","components/GameFeed.component.js","utils/getCardNameByType.js","components/MyCard.component.js","utils/getAlivePlayersNumber.js","utils/getPlayerById.js","utils/getVotedPlayersNumber.js","utils/isAlive.js","utils/isGameFinished.js","pages/Game.page.js","utils/getOtherPlayersAlive.js","utils/isMafia.js","pages/Mafia.page.js","utils/isPolice.js","pages/Police.page.js","pages/Civils.page.js","utils/isBeforeNightPhase.js","assets/playersSleep.mp3","assets/playersWakeUp.mp3","assets/mafiaSleep.mp3","assets/mafiaWakeUp.mp3","assets/policeSleep.mp3","assets/policeWakeUp.mp3","sound-manager.js","pages/Intro.page.js","App.js","utils/isDiscussionPhase.js","utils/isMafiaTurnPhase.js","utils/isPoliceTurnPhase.js","utils/isCivilsTurnPhase.js","index.js"],"names":["mainPanels","MainHomePage","setActivePanel","panelHeaderMessage","size","stretched","onClick","BaseUrl","GameStatus","GamePhase","GameAudioPhase","CardType","HealthStatus","GameResult","GameApi","axios","get","creatorName","playerPhotoUrl","civilsNumber","mafiaNumber","hasPolice","post","playerName","gameId","playerId","playerVoteValue","ErrorSnackbar","closeSnackbar","errorMessage","onClose","before","MainCreateGamePage","setGame","setPlayerId","subscribeToGame","useState","hostName","setHostName","numberOfCivils","setNumberOfCivils","numberOfMafia","setNumberOfMafia","setHasPolice","name","controlsTouchedStatus","setControlsTouchedStatus","snackbarError","setSnackbarError","spinner","setSpinner","numberOfMafiaValidStatus","setNumberOfMafiaValidStatus","numberOfMafiaErrorMessage","setNumberOfMafiaErrorMessage","numberOfCivilsValidStatus","setNumberOfCivilsValidStatus","numberOfCivilsErrorMessage","setNumberOfCivilsErrorMessage","touchControl","controlName","useEffect","numberOfMafiaNum","Number","numberOfCivilsNum","mafiaValidErrorWasRegisteredInCurrentRun","civilsValidErrorWasREgisteredInCurrentRun","left","popout","onSubmit","e","preventDefault","top","status","bottom","type","value","onChange","currentTarget","onFocus","placeholder","target","checked","mode","disabled","then","response","data","game","id","catch","message","finally","MainJoinGamePage","roomCodeControlValue","setRoomCodeControlValue","nameControlValue","setNameControlValue","roomCode","toUpperCase","gameStatus","MainWaitGamePage","player","players","find","level","weight","className","length","playersNumber","header","map","src","photoUrl","isHost","GameFeedComponent","actions","action","killedPlayer","description","cardType","displayCardNameSave","MyCardComponent","displayCardName","setDisplayCardName","card","after","getCardNameByType","filter","votingPull","GameModals","MainGamePage","getPlayerById","setPlayer","activeModal","setActiveModal","hasVoted","setHasVoted","onFinishedGame","modal","subheader","icon","isGameFinished","result","gamePhase","style","margin","isAlive","getVotedPlayersNumber","getAlivePlayersNumber","MafiaPage","getOtherPlayersAlive","otherPlayers","selectedPlayerId","setSelectedPlayerId","isMafia","PoliceModals","PolicePage","onEndNight","isPolice","selectedPlayer","CivilsPage","soundManager","playersSleep","Howl","playersWakeUp","mafiaSleep","mafiaWakeUp","policeSleep","policeWakeUp","IntroPage","submitHasSeenIntro","App","setPlayerPhotoUrl","gameAudioPhase","setGameAudioPhase","activeView","activePanel","intervalId","setIntervalId","setInterval","responsee","clearInterval","isBeforeNightPhase","isDiscussionPhase","isMafiaTurnPhase","isPoliceTurnPhase","isCivilsTurnPhase","undefined","play","bridge","send","res","photo_200","keys","centered","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eec53184.chunk.js","sourcesContent":["export const mainPanels = {\r\n  intro: \"Intro\",\r\n  home: \"Home\",\r\n  createGame: \"CreateGame\",\r\n  joinGame: \"JoinGame\",\r\n  waitGame: \"WaitGame\",\r\n  game: \"Game\",\r\n  mafia: \"Mafia\",\r\n  police: \"Police\",\r\n  civils: \"Civils\",\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Button, Div, PanelHeader } from \"@vkontakte/vkui\";\r\nimport { mainPanels } from \"../routes\";\r\n\r\nexport default function MainHomePage({ setActivePanel, panelHeaderMessage }) {\r\n  return (\r\n    <>\r\n      <PanelHeader>{panelHeaderMessage}</PanelHeader>\r\n      <Div>\r\n        <Button\r\n          size=\"l\"\r\n          stretched\r\n          onClick={() => setActivePanel(mainPanels.createGame)}\r\n        >\r\n          Создать игру\r\n        </Button>\r\n      </Div>\r\n      <Div>\r\n        <Button\r\n          size=\"l\"\r\n          stretched\r\n          onClick={() => setActivePanel(mainPanels.joinGame)}\r\n        >\r\n          Присоединиться\r\n        </Button>\r\n      </Div>\r\n    </>\r\n  );\r\n}\r\n","export const BaseUrl = \"https://mafia2cards.herokuapp.com/api\";\r\n\r\nexport const GameStatus = {\r\n  Created: 0,\r\n  Started: 1,\r\n  Finished: 2,\r\n};\r\n\r\nexport const GamePhase = {\r\n  MafiaTurn: 0,\r\n  PoliceTurn: 1,\r\n  Discussion: 2,\r\n  CivilsTurn: 3,\r\n  BeforeNight: 4,\r\n};\r\n\r\nexport const GameAudioPhase = {\r\n  PlayersSleep: 0,\r\n  PlayersWakeUp: 1,\r\n  MafiaSleep: 2,\r\n  MafiaWakeUp: 3,\r\n  PoliceSleep: 4,\r\n  PoliceWakeUp: 5,\r\n};\r\n\r\nexport const CardType = {\r\n  Mafia: 0,\r\n  Police: 1,\r\n  Civil: 2,\r\n};\r\n\r\nexport const HealthStatus = {\r\n  Alive: 0,\r\n  Injured: 1,\r\n  Dead: 2,\r\n};\r\n\r\nexport const GameResult = {\r\n  MafiaWins: 0,\r\n  CivilWins: 1,\r\n};\r\n","import axios from \"axios\";\r\nimport { BaseUrl } from \"./constants\";\r\n\r\nexport const GameApi = {\r\n  wakeup: () => axios.get(`${BaseUrl}/game2/wakeup`),\r\n  createGame: (\r\n    creatorName,\r\n    playerPhotoUrl,\r\n    civilsNumber,\r\n    mafiaNumber,\r\n    hasPolice\r\n  ) =>\r\n    axios.post(`${BaseUrl}/game2/create`, {\r\n      creatorName,\r\n      playerPhotoUrl,\r\n      civilsNumber,\r\n      mafiaNumber,\r\n      hasPolice,\r\n    }),\r\n  joinGame: (playerName, playerPhotoUrl, gameId) =>\r\n    axios.post(`${BaseUrl}/game2/join`, {\r\n      playerName,\r\n      playerPhotoUrl,\r\n      gameId,\r\n    }),\r\n  getGame: (gameId) => axios.get(`${BaseUrl}/game2/get/${gameId}`),\r\n  starGame: (gameId) =>\r\n    axios.post(`${BaseUrl}/game2/start`, {\r\n      gameId,\r\n    }),\r\n  startNight: (gameId, playerId) =>\r\n    axios.post(`${BaseUrl}/game2/startNight`, {\r\n      gameId,\r\n      playerId,\r\n    }),\r\n  mafiaKill: (gameId, playerId, playerVoteValue) =>\r\n    axios.post(`${BaseUrl}/game2/mafiaKill`, {\r\n      gameId,\r\n      playerId,\r\n      playerVoteValue,\r\n    }),\r\n  endNight: (gameId) =>\r\n    axios.post(`${BaseUrl}/game2/endNight`, {\r\n      gameId,\r\n    }),\r\n  startTrial: (gameId, playerId) =>\r\n    axios.post(`${BaseUrl}/game2/startTrial`, {\r\n      gameId,\r\n      playerId,\r\n    }),\r\n  civilsKill: (gameId, playerId, playerVoteValue) =>\r\n    axios.post(`${BaseUrl}/game2/civilsKill`, {\r\n      gameId,\r\n      playerId,\r\n      playerVoteValue,\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport { Icon16ErrorCircleFill } from \"@vkontakte/icons\";\r\nimport { Snackbar } from \"@vkontakte/vkui\";\r\n\r\nexport default function ErrorSnackbar({ closeSnackbar, errorMessage }) {\r\n  return (\r\n    <Snackbar onClose={closeSnackbar} before={<Icon16ErrorCircleFill />}>\r\n      {errorMessage}\r\n    </Snackbar>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormItem,\r\n  FormLayout,\r\n  Group,\r\n  Input,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  ScreenSpinner,\r\n  SplitCol,\r\n  SplitLayout,\r\n} from \"@vkontakte/vkui\";\r\nimport { mainPanels } from \"../routes\";\r\nimport { GameApi } from \"../api\";\r\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\r\n\r\nexport default function MainCreateGamePage({\r\n  setActivePanel,\r\n  setGame,\r\n  setPlayerId,\r\n  subscribeToGame,\r\n  panelHeaderMessage,\r\n  playerPhotoUrl,\r\n}) {\r\n  const [hostName, setHostName] = useState(\"\");\r\n  const [numberOfCivils, setNumberOfCivils] = useState(5);\r\n  const [numberOfMafia, setNumberOfMafia] = useState(1);\r\n  const [hasPolice, setHasPolice] = useState(false);\r\n  const [controlsTouchedStatus, setControlsTouchedStatus] = useState({\r\n    name: false,\r\n    numberOfCivils: false,\r\n    numberOfMafia: false,\r\n  });\r\n  const [snackbarError, setSnackbarError] = useState(null);\r\n  const [spinner, setSpinner] = useState(null);\r\n  const [numberOfMafiaValidStatus, setNumberOfMafiaValidStatus] =\r\n    useState(\"valid\");\r\n  const [numberOfMafiaErrorMessage, setNumberOfMafiaErrorMessage] =\r\n    useState(\"\");\r\n  const [numberOfCivilsValidStatus, setNumberOfCivilsValidStatus] =\r\n    useState(\"valid\");\r\n  const [numberOfCivilsErrorMessage, setNumberOfCivilsErrorMessage] =\r\n    useState(\"\");\r\n  // public methods\r\n  const touchControl = (controlName) => {\r\n    setControlsTouchedStatus({ ...controlsTouchedStatus, [controlName]: true });\r\n  };\r\n  const onCreateGame = () => {\r\n    setSpinner(<ScreenSpinner />);\r\n    GameApi.createGame(\r\n      hostName,\r\n      playerPhotoUrl,\r\n      Number(numberOfCivils),\r\n      Number(numberOfMafia),\r\n      hasPolice\r\n    )\r\n      .then((response) => {\r\n        setGame(response.data.game);\r\n        setPlayerId(response.data.playerId);\r\n        subscribeToGame(response.data.game.id);\r\n        setActivePanel(mainPanels.waitGame);\r\n      })\r\n      .catch((e) => {\r\n        const errorMessage = e.response.data.message;\r\n        setSnackbarError(errorMessage);\r\n      })\r\n      .finally(() => {\r\n        setSpinner(null);\r\n      });\r\n  };\r\n  // effects\r\n  useEffect(() => {\r\n    const numberOfMafiaNum = Number(numberOfMafia);\r\n    const numberOfCivilsNum = Number(numberOfCivils);\r\n    let mafiaValidErrorWasRegisteredInCurrentRun = false;\r\n    let civilsValidErrorWasREgisteredInCurrentRun = false;\r\n    if (numberOfMafiaNum < 1) {\r\n      setNumberOfMafiaValidStatus(\"error\");\r\n      setNumberOfMafiaErrorMessage(\"Мафии должно быть больше 0\");\r\n      mafiaValidErrorWasRegisteredInCurrentRun = true;\r\n    }\r\n    if (numberOfCivilsNum < 3) {\r\n      setNumberOfCivilsValidStatus(\"error\");\r\n      setNumberOfCivilsErrorMessage(\"Мирных жителей должно быть больше 2\");\r\n      civilsValidErrorWasREgisteredInCurrentRun = true;\r\n    }\r\n    if (numberOfMafiaNum === numberOfCivilsNum) {\r\n      setNumberOfMafiaValidStatus(\"error\");\r\n      setNumberOfMafiaErrorMessage(\r\n        \"Мафии не может быть столько же, сколько мирных жителей\"\r\n      );\r\n      mafiaValidErrorWasRegisteredInCurrentRun = true;\r\n    }\r\n    if (numberOfMafiaNum > numberOfCivilsNum) {\r\n      setNumberOfMafiaValidStatus(\"error\");\r\n      setNumberOfMafiaErrorMessage(\r\n        \"Мафии не может быть больше, чем мирных жителей\"\r\n      );\r\n      mafiaValidErrorWasRegisteredInCurrentRun = true;\r\n    }\r\n    if (!mafiaValidErrorWasRegisteredInCurrentRun) {\r\n      setNumberOfMafiaValidStatus(\"valid\");\r\n      setNumberOfMafiaErrorMessage(\"\");\r\n    }\r\n    if (!civilsValidErrorWasREgisteredInCurrentRun) {\r\n      setNumberOfCivilsValidStatus(\"valid\");\r\n      setNumberOfCivilsErrorMessage(\"\");\r\n    }\r\n  }, [numberOfMafia, numberOfCivils]);\r\n\r\n  return (\r\n    <>\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderBack onClick={() => setActivePanel(mainPanels.home)} />\r\n        }\r\n      >\r\n        {panelHeaderMessage}\r\n      </PanelHeader>\r\n      <SplitLayout popout={spinner}>\r\n        <SplitCol>\r\n          <Group>\r\n            <FormLayout\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              <FormItem\r\n                top=\"Имя\"\r\n                status={\r\n                  hostName\r\n                    ? \"valid\"\r\n                    : controlsTouchedStatus.name\r\n                    ? \"error\"\r\n                    : \"default\"\r\n                }\r\n                bottom={\r\n                  !hostName && controlsTouchedStatus.name\r\n                    ? \"Это поле обязательное\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={hostName}\r\n                  onChange={(e) => {\r\n                    setHostName(e.currentTarget.value);\r\n                  }}\r\n                  onFocus={(e) => touchControl(\"name\")}\r\n                  placeholder=\"Мое имя\"\r\n                />\r\n              </FormItem>\r\n              <FormItem\r\n                top=\"Количество мирных жителей\"\r\n                status={numberOfCivilsValidStatus}\r\n                bottom={numberOfCivilsErrorMessage}\r\n              >\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"numberOfCivils\"\r\n                  value={numberOfCivils}\r\n                  onChange={(e) => {\r\n                    setNumberOfCivils(e.target.value);\r\n                  }}\r\n                  onFocus={(e) => touchControl(\"numberOfCivils\")}\r\n                />\r\n              </FormItem>\r\n              <FormItem\r\n                top=\"Количество мафии\"\r\n                status={numberOfMafiaValidStatus}\r\n                bottom={numberOfMafiaErrorMessage}\r\n              >\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"numberOfMafia\"\r\n                  value={numberOfMafia}\r\n                  onChange={(e) => {\r\n                    setNumberOfMafia(e.currentTarget.value);\r\n                  }}\r\n                  onFocus={(e) => touchControl(\"numberOfMafia\")}\r\n                />\r\n              </FormItem>\r\n              <Checkbox\r\n                value={hasPolice}\r\n                onChange={(e) => setHasPolice(e.currentTarget.checked)}\r\n              >\r\n                Добавить комиссара\r\n              </Checkbox>\r\n              <FormItem>\r\n                <Button\r\n                  mode=\"commerce\"\r\n                  type=\"submit\"\r\n                  stretched\r\n                  size=\"l\"\r\n                  disabled={\r\n                    !hostName ||\r\n                    numberOfCivilsValidStatus === \"error\" ||\r\n                    numberOfMafiaValidStatus === \"error\"\r\n                  }\r\n                  onClick={onCreateGame}\r\n                >\r\n                  Создать\r\n                </Button>\r\n              </FormItem>\r\n            </FormLayout>\r\n          </Group>\r\n          {snackbarError && (\r\n            <ErrorSnackbar\r\n              errorMessage={snackbarError}\r\n              closeSnackbar={() => setSnackbarError(null)}\r\n            />\r\n          )}\r\n        </SplitCol>\r\n      </SplitLayout>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  FormItem,\r\n  FormLayout,\r\n  Group,\r\n  Input,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  ScreenSpinner,\r\n  SplitCol,\r\n  SplitLayout,\r\n} from \"@vkontakte/vkui\";\r\nimport React, { useState } from \"react\";\r\nimport { GameApi } from \"../api\";\r\nimport { mainPanels } from \"../routes\";\r\nimport { GameStatus } from \"../constants\";\r\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\r\n\r\nexport default function MainJoinGamePage({\r\n  setActivePanel,\r\n  setGame,\r\n  setPlayerId,\r\n  subscribeToGame,\r\n  panelHeaderMessage,\r\n  playerPhotoUrl,\r\n}) {\r\n  // ui state\r\n  const [roomCodeControlValue, setRoomCodeControlValue] = useState(\"\");\r\n  const [nameControlValue, setNameControlValue] = useState(\"\");\r\n  const [controlsTouchedStatus, setControlsTouchedStatus] = useState({\r\n    roomCode: false,\r\n    name: false,\r\n  });\r\n  const [snackbarError, setSnackbarError] = useState(null);\r\n  const [spinner, setSpinner] = useState(null);\r\n  // public methods\r\n  const touchControl = (controlName) => {\r\n    setControlsTouchedStatus({ ...controlsTouchedStatus, [controlName]: true });\r\n  };\r\n  const onJoin = () => {\r\n    setSpinner(<ScreenSpinner />);\r\n    GameApi.joinGame(nameControlValue, playerPhotoUrl, roomCodeControlValue)\r\n      .then((response) => {\r\n        setGame(response.data.game);\r\n        setPlayerId(response.data.playerId);\r\n        subscribeToGame(response.data.game.id);\r\n        if (response.data.game.gameStatus === GameStatus.Started) {\r\n          setActivePanel(mainPanels.game);\r\n          return;\r\n        }\r\n        setActivePanel(mainPanels.waitGame);\r\n      })\r\n      .catch((e) => {\r\n        const errorMessage = e.response.data.message;\r\n        setSnackbarError(errorMessage);\r\n      })\r\n      .finally(() => {\r\n        setSpinner(null);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderBack onClick={() => setActivePanel(mainPanels.home)} />\r\n        }\r\n      >\r\n        {panelHeaderMessage}\r\n      </PanelHeader>\r\n      <SplitLayout popout={spinner}>\r\n        <SplitCol>\r\n          <Group>\r\n            <FormLayout\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              <FormItem\r\n                top=\"Код комнаты\"\r\n                status={\r\n                  roomCodeControlValue\r\n                    ? \"valid\"\r\n                    : controlsTouchedStatus.roomCode\r\n                    ? \"error\"\r\n                    : \"default\"\r\n                }\r\n                bottom={\r\n                  !roomCodeControlValue && controlsTouchedStatus.roomCode\r\n                    ? \"Это поле обязательное\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"roomCode\"\r\n                  value={roomCodeControlValue}\r\n                  onChange={(e) => {\r\n                    setRoomCodeControlValue(\r\n                      e.currentTarget.value.toUpperCase()\r\n                    );\r\n                  }}\r\n                  onFocus={(e) => touchControl(\"roomCode\")}\r\n                  placeholder=\"MF12P5\"\r\n                />\r\n              </FormItem>\r\n              <FormItem\r\n                top=\"Имя\"\r\n                status={\r\n                  nameControlValue\r\n                    ? \"valid\"\r\n                    : controlsTouchedStatus.name\r\n                    ? \"error\"\r\n                    : \"default\"\r\n                }\r\n                bottom={\r\n                  !nameControlValue && controlsTouchedStatus.name\r\n                    ? \"Это поле обязательное\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={nameControlValue}\r\n                  onChange={(e) => {\r\n                    setNameControlValue(e.currentTarget.value);\r\n                  }}\r\n                  onFocus={(e) => touchControl(\"name\")}\r\n                  placeholder=\"Твое имя\"\r\n                />\r\n              </FormItem>\r\n              <FormItem>\r\n                <Button\r\n                  mode=\"commerce\"\r\n                  type=\"submit\"\r\n                  stretched\r\n                  size=\"l\"\r\n                  disabled={!roomCodeControlValue || !nameControlValue}\r\n                  onClick={onJoin}\r\n                >\r\n                  Присоединиться\r\n                </Button>\r\n              </FormItem>\r\n            </FormLayout>\r\n          </Group>\r\n          {snackbarError && (\r\n            <ErrorSnackbar\r\n              errorMessage={snackbarError}\r\n              closeSnackbar={() => setSnackbarError(null)}\r\n            />\r\n          )}\r\n        </SplitCol>\r\n      </SplitLayout>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Caption,\r\n  Div,\r\n  Group,\r\n  Header,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  SimpleCell,\r\n  Title,\r\n} from \"@vkontakte/vkui\";\r\nimport { mainPanels } from \"../routes\";\r\nimport \"./WaitGame.page.css\";\r\nimport { GameApi } from \"../api\";\r\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\r\n\r\nexport default function MainWaitGamePage({\r\n  setActivePanel,\r\n  panelHeaderMessage,\r\n  game,\r\n  playerId,\r\n}) {\r\n  // game models\r\n  const player = game.players.find((player) => player.id === playerId);\r\n  // ui state\r\n  const [snackbarError, setSnackbarError] = useState(null);\r\n  // methods\r\n  const onStartGame = () => {\r\n    GameApi.starGame(game.id)\r\n      .then((response) => {\r\n        setActivePanel(mainPanels.game);\r\n      })\r\n      .catch((e) => {\r\n        const errorMessage = e.response.data.message;\r\n        setSnackbarError(errorMessage);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderBack onClick={() => setActivePanel(mainPanels.home)} />\r\n        }\r\n      >\r\n        {panelHeaderMessage}\r\n      </PanelHeader>\r\n      <Group>\r\n        <Div>\r\n          <Title level=\"1\" weight=\"bold\" className=\"wait-game-panel__room-code\">\r\n            Код игры: {game.id}\r\n          </Title>\r\n          <Caption\r\n            level=\"1\"\r\n            weight=\"regular\"\r\n            className=\"wait-game-panel__code-description\"\r\n          >\r\n            Поделитесь этим кодом с друзьями, чтобы они к вам присоединились\r\n          </Caption>\r\n          <Title\r\n            level=\"2\"\r\n            weight=\"regular\"\r\n            className=\"wait-game-panel__room-players\"\r\n          >\r\n            Игроков: {game.players.length}/{game.playersNumber}\r\n          </Title>\r\n        </Div>\r\n      </Group>\r\n      <Group header={<Header>Игроки</Header>}>\r\n        <Div>\r\n          {game.players.map((player) => (\r\n            <SimpleCell\r\n              before={<Avatar src={player.photoUrl} />}\r\n              key={player.id}\r\n            >\r\n              {player.name}\r\n            </SimpleCell>\r\n          ))}\r\n        </Div>\r\n      </Group>\r\n      <Div>\r\n        <Button\r\n          mode=\"commerce\"\r\n          size=\"l\"\r\n          stretched\r\n          disabled={\r\n            !(game.players.length === game.playersNumber && player.isHost)\r\n          }\r\n          onClick={onStartGame}\r\n        >\r\n          Начать игру\r\n        </Button>\r\n      </Div>\r\n      {snackbarError && (\r\n        <ErrorSnackbar\r\n          errorMessage={snackbarError}\r\n          closeSnackbar={() => setSnackbarError(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, SimpleCell } from \"@vkontakte/vkui\";\r\nimport React from \"react\";\r\n\r\nexport default function GameFeedComponent({ actions = [] }) {\r\n  return (\r\n    <>\r\n      {actions.map((action) => (\r\n        <SimpleCell\r\n          key={action.id}\r\n          before={<Avatar src={action.killedPlayer.photoUrl} />}\r\n          description={action.message}\r\n        >\r\n          {action.killedPlayer.name}\r\n        </SimpleCell>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import { CardType } from \"../constants\";\r\n\r\nexport default (cardType) => {\r\n  switch (cardType) {\r\n    case CardType.Mafia:\r\n      return \"Мафия\";\r\n    case CardType.Police:\r\n      return \"Комиссар\";\r\n    case CardType.Civil:\r\n      return \"Мирный житель\";\r\n    default:\r\n      return \"Карты с таким типом не существует\";\r\n  }\r\n};\r\n","import { Icon24Hide, Icon24HideOutline } from \"@vkontakte/icons\";\r\nimport { Div, SimpleCell, Title } from \"@vkontakte/vkui\";\r\nimport React, { useState } from \"react\";\r\nimport getCardNameByType from \"../utils/getCardNameByType\";\r\n\r\nlet displayCardNameSave = true;\r\n\r\nexport default function MyCardComponent({ player }) {\r\n  const [displayCardName, setDisplayCardName] = useState(displayCardNameSave);\r\n  return (\r\n    <>\r\n      <Div>\r\n        <Title level=\"2\" weight=\"medium\">\r\n          Твоя карта\r\n        </Title>\r\n      </Div>\r\n      {player.card && (\r\n        <SimpleCell\r\n          after={\r\n            displayCardName ? (\r\n              <Icon24HideOutline\r\n                onClick={() => {\r\n                  setDisplayCardName(false);\r\n                  displayCardNameSave = false;\r\n                }}\r\n              />\r\n            ) : (\r\n              <Icon24Hide\r\n                onClick={() => {\r\n                  setDisplayCardName(true);\r\n                  displayCardNameSave = true;\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          {displayCardName\r\n            ? getCardNameByType(player.card.type)\r\n            : \"Карта скрыта\"}\r\n        </SimpleCell>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { HealthStatus } from \"../constants\";\r\n\r\nexport default (game) =>\r\n  game.players.filter((player) => player.status === HealthStatus.Alive).length;\r\n","export default (game, playerId) =>\r\n  game.players.find((player) => player.id === playerId);\r\n","export default (game) => game.votingPull.length;\r\n","import { HealthStatus } from \"../constants\";\r\n\r\nexport default (player) => player.status !== HealthStatus.Dead;\r\n","import { GameStatus } from \"../constants\";\r\n\r\nexport default (game) => game && game.gameStatus === GameStatus.Finished;\r\n","import { Icon56CupMusicNoteOutline } from \"@vkontakte/icons\";\r\nimport {\r\n  Button,\r\n  Div,\r\n  ModalRoot,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  SplitCol,\r\n  SplitLayout,\r\n  Separator,\r\n  ModalCard,\r\n} from \"@vkontakte/vkui\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GameApi } from \"../api\";\r\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\r\nimport GameFeedComponent from \"../components/GameFeed.component\";\r\nimport MyCardComponent from \"../components/MyCard.component\";\r\nimport { GamePhase, GameResult } from \"../constants\";\r\nimport { mainPanels } from \"../routes\";\r\nimport getAlivePlayersNumber from \"../utils/getAlivePlayersNumber\";\r\nimport getPlayerById from \"../utils/getPlayerById\";\r\nimport getVotedPlayersNumber from \"../utils/getVotedPlayersNumber\";\r\nimport isAlive from \"../utils/isAlive\";\r\nimport isGameFinished from \"../utils/isGameFinished\";\r\nimport \"./Game.page.css\";\r\n\r\nconst GameModals = {\r\n  MafiaWins: \"MafiaWins\",\r\n  CivilWins: \"CivilWins\",\r\n};\r\n\r\nexport default function MainGamePage({\r\n  setActivePanel,\r\n  panelHeaderMessage,\r\n  game,\r\n  playerId,\r\n}) {\r\n  // game models\r\n  const [player, setPlayer] = useState(getPlayerById(game, playerId));\r\n  // ui state\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n  const [snackbarError, setSnackbarError] = useState(null);\r\n  // methods\r\n  const onStartNight = () => {\r\n    setHasVoted(true);\r\n    GameApi.startNight(game.id, player.name).catch((e) => {\r\n      const errorMessage = e.response.data.message;\r\n      setSnackbarError(errorMessage);\r\n    });\r\n  };\r\n  const onStartTrial = () => {\r\n    setHasVoted(true);\r\n    GameApi.startTrial(game.id, playerId).catch((e) => {\r\n      const errorMessage = e.response.data.message;\r\n      setSnackbarError(errorMessage);\r\n    });\r\n  };\r\n  const onFinishedGame = () => {\r\n    setActiveModal(null);\r\n    setActivePanel(mainPanels.home);\r\n  };\r\n  // modal\r\n  const modal = (\r\n    <ModalRoot activeModal={activeModal}>\r\n      <ModalCard\r\n        id={GameModals.MafiaWins}\r\n        header=\"Результат\"\r\n        subheader=\"Победила мафия\"\r\n        icon={<Icon56CupMusicNoteOutline />}\r\n        onClose={onFinishedGame}\r\n        actions={\r\n          <Button size=\"l\" mode=\"primary\" onClick={onFinishedGame}>\r\n            Завершить игру\r\n          </Button>\r\n        }\r\n      />\r\n      <ModalCard\r\n        id={GameModals.CivilWins}\r\n        header=\"Результат\"\r\n        subheader=\"Победили мирные жители\"\r\n        icon={<Icon56CupMusicNoteOutline />}\r\n        onClose={onFinishedGame}\r\n        actions={\r\n          <Button size=\"l\" mode=\"primary\" onClick={onFinishedGame}>\r\n            Завершить игру\r\n          </Button>\r\n        }\r\n      />\r\n    </ModalRoot>\r\n  );\r\n  // effects\r\n  useEffect(() => {\r\n    setPlayer(getPlayerById(game, playerId));\r\n  }, [game]);\r\n  useEffect(() => {\r\n    if (isGameFinished(game) && game.result === GameResult.CivilWins) {\r\n      setActiveModal(GameModals.CivilWins);\r\n    }\r\n    if (isGameFinished(game) && game.result === GameResult.MafiaWins) {\r\n      setActiveModal(GameModals.MafiaWins);\r\n    }\r\n  }, [game.result]);\r\n  useEffect(() => {\r\n    setHasVoted(false);\r\n  }, [game.gamePhase]);\r\n  return (\r\n    <>\r\n      <PanelHeader\r\n        left={\r\n          <PanelHeaderBack onClick={() => setActivePanel(mainPanels.home)} />\r\n        }\r\n      >\r\n        {panelHeaderMessage}\r\n      </PanelHeader>\r\n      <SplitLayout modal={modal}>\r\n        <SplitCol>\r\n          <MyCardComponent player={player} />\r\n          <Separator style={{ margin: \"12px 0\" }} />\r\n          <Div>\r\n            {game.gamePhase === GamePhase.BeforeNight && (\r\n              <Button\r\n                size=\"l\"\r\n                stretched\r\n                onClick={onStartNight}\r\n                disabled={!isAlive(player) || hasVoted}\r\n              >\r\n                {getVotedPlayersNumber(game) === 0\r\n                  ? \"Начать ночь\"\r\n                  : `Начать ночь (голосов ${getVotedPlayersNumber(\r\n                      game\r\n                    )} из ${getAlivePlayersNumber(game)})`}\r\n              </Button>\r\n            )}\r\n            {game.gamePhase === GamePhase.Discussion && (\r\n              <Button\r\n                size=\"l\"\r\n                stretched\r\n                onClick={onStartTrial}\r\n                disabled={!isAlive(player) || hasVoted}\r\n              >\r\n                {getVotedPlayersNumber(game) === 0\r\n                  ? \"Начать суд\"\r\n                  : `Начать суд (голосов ${getVotedPlayersNumber(\r\n                      game\r\n                    )} из ${getAlivePlayersNumber(game)})`}\r\n              </Button>\r\n            )}\r\n          </Div>\r\n          {isAlive(player) && hasVoted && (\r\n            <Div>Ваш голос учтен, ждем остальных игроков</Div>\r\n          )}\r\n          <GameFeedComponent actions={game.actions} />\r\n        </SplitCol>\r\n      </SplitLayout>\r\n      {snackbarError && (\r\n        <ErrorSnackbar\r\n          errorMessage={snackbarError}\r\n          closeSnackbar={() => setSnackbarError(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { HealthStatus } from \"../constants\";\r\n\r\nexport default (game, playerId) =>\r\n  game.players.filter(\r\n    (player) => player.id !== playerId && player.status !== HealthStatus.Dead\r\n  );\r\n","import { CardType } from \"../constants\";\r\n\r\nexport default (player) => player.card.type === CardType.Mafia;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Cell,\r\n  Div,\r\n  Group,\r\n  PanelHeader,\r\n  Title,\r\n} from \"@vkontakte/vkui\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { GameApi } from \"../api\";\r\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\r\nimport getOtherPlayersAlive from \"../utils/getOtherPlayersAlive\";\r\nimport getPlayerById from \"../utils/getPlayerById\";\r\nimport isAlive from \"../utils/isAlive\";\r\nimport isMafia from \"../utils/isMafia\";\r\n\r\nexport default function MafiaPage({\r\n  setActivePanel,\r\n  panelHeaderMessage,\r\n  game,\r\n  playerId,\r\n}) {\r\n  // game models\r\n  const [player, setPlayer] = useState(getPlayerById(game, playerId));\r\n  const [otherPlayers, setOtherPlayers] = useState(\r\n    getOtherPlayersAlive(game, playerId)\r\n  );\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n  // ui state\r\n  const [selectedPlayerId, setSelectedPlayerId] = useState(null);\r\n  const [snackbarError, setSnackbarError] = useState(null);\r\n  // methods\r\n  const onKill = () => {\r\n    setHasVoted(true);\r\n    GameApi.mafiaKill(game.id, player.name, selectedPlayerId).catch((e) => {\r\n      const errorMessage = e.response.data.message;\r\n      setSnackbarError(errorMessage);\r\n    });\r\n  };\r\n  // effects\r\n  useEffect(() => {\r\n    setPlayer(getPlayerById(game, playerId));\r\n  }, [game]);\r\n  return (\r\n    <>\r\n      <PanelHeader>{panelHeaderMessage}</PanelHeader>\r\n      {isMafia(player) && isAlive(player) && !hasVoted && (\r\n        <>\r\n          <Div>\r\n            <Title level=\"2\" weight=\"medium\">\r\n              Кого убить?\r\n            </Title>\r\n          </Div>\r\n          <Group>\r\n            {otherPlayers.map((player) => (\r\n              <Cell\r\n                mode=\"selectable\"\r\n                before={<Avatar src={player.photoUrl} />}\r\n                onChange={() => {\r\n                  setSelectedPlayerId(\r\n                    player.id === selectedPlayerId ? null : player.id\r\n                  );\r\n                }}\r\n                key={player.id}\r\n                checked={player.id === selectedPlayerId}\r\n              >\r\n                {player.name}\r\n              </Cell>\r\n            ))}\r\n          </Group>\r\n          <Div>\r\n            <Button\r\n              size=\"l\"\r\n              stretched\r\n              mode=\"commerce\"\r\n              disabled={selectedPlayerId === null}\r\n              onClick={onKill}\r\n            >\r\n              Убить\r\n            </Button>\r\n          </Div>\r\n        </>\r\n      )}\r\n      {isMafia(player) && isAlive(player) && hasVoted && (\r\n        <Div>Ваш голос учтен, ждем остальных игроков</Div>\r\n      )}\r\n      {isMafia(player) && !isAlive(player) && <Div>Вы мертвы</Div>}\r\n      {!isMafia(player) && <Div>Спокойной ночи!</Div>}\r\n      {snackbarError && (\r\n        <ErrorSnackbar\r\n          errorMessage={snackbarError}\r\n          closeSnackbar={() => setSnackbarError(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { CardType } from \"../constants\";\r\n\r\nexport default (player) => player.card.type === CardType.Police;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Cell,\r\n  Div,\r\n  Group,\r\n  ModalCard,\r\n  ModalRoot,\r\n  PanelHeader,\r\n  SplitCol,\r\n  SplitLayout,\r\n  Title,\r\n} from \"@vkontakte/vkui\";\r\nimport { Icon56Users3Outline } from \"@vkontakte/icons\";\r\nimport isPolice from \"../utils/isPolice\";\r\nimport { CardType } from \"../constants\";\r\nimport getPlayerById from \"../utils/getPlayerById\";\r\nimport { GameApi } from \"../api\";\r\nimport getOtherPlayersAlive from \"../utils/getOtherPlayersAlive\";\r\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\r\n\r\nconst PoliceModals = {\r\n  mafia: \"Mafia\",\r\n  civil: \"Civil\",\r\n};\r\n\r\nexport default function PolicePage({\r\n  setActivePanel,\r\n  panelHeaderMessage,\r\n  game,\r\n  playerId,\r\n}) {\r\n  // game models\r\n  const [player, setPlayer] = useState(getPlayerById(game, playerId));\r\n  const [otherPlayers, setOtherPlayers] = useState(\r\n    getOtherPlayersAlive(game, playerId)\r\n  );\r\n  // ui state\r\n  const [selectedPlayerId, setSelectedPlayerId] = useState(null);\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [snackbarError, setSnackbarError] = useState(null);\r\n  // methods\r\n  const onPoliceCheck = () => {\r\n    const selectedPlayer = otherPlayers.find(\r\n      (player) => player.id === selectedPlayerId\r\n    );\r\n    if (selectedPlayer.card.type === CardType.Mafia) {\r\n      setActiveModal(PoliceModals.mafia);\r\n    } else {\r\n      setActiveModal(PoliceModals.civil);\r\n    }\r\n  };\r\n  const onEndNight = () => {\r\n    setActiveModal(null);\r\n    GameApi.endNight(game.id).catch((e) => {\r\n      const errorMessage = e.response.data.message;\r\n      setSnackbarError(errorMessage);\r\n    });\r\n  };\r\n  // modal\r\n  const modal = (\r\n    <ModalRoot activeModal={activeModal}>\r\n      <ModalCard\r\n        id={PoliceModals.mafia}\r\n        header=\"Результат\"\r\n        subheader=\"Этот пользователь мафия\"\r\n        icon={<Icon56Users3Outline />}\r\n        onClose={onEndNight}\r\n        actions={\r\n          <Button size=\"l\" mode=\"primary\" onClick={onEndNight}>\r\n            Завершить ход\r\n          </Button>\r\n        }\r\n      />\r\n      <ModalCard\r\n        id={PoliceModals.civil}\r\n        header=\"Результат\"\r\n        subheader=\"Этот пользователь мирный житель\"\r\n        icon={<Icon56Users3Outline />}\r\n        onClose={onEndNight}\r\n        actions={\r\n          <Button size=\"l\" mode=\"primary\" onClick={onEndNight}>\r\n            Завершить ход\r\n          </Button>\r\n        }\r\n      />\r\n    </ModalRoot>\r\n  );\r\n  // effects\r\n  useEffect(() => {\r\n    setPlayer(getPlayerById(game, playerId));\r\n  }, [game]);\r\n  return (\r\n    <>\r\n      <PanelHeader>{panelHeaderMessage}</PanelHeader>\r\n      {isPolice(player) ? (\r\n        <SplitLayout modal={modal}>\r\n          <SplitCol>\r\n            <Div>\r\n              <Title level=\"2\" weight=\"medium\">\r\n                Кого проверить?\r\n              </Title>\r\n            </Div>\r\n            <Group>\r\n              {otherPlayers.map((player) => (\r\n                <Cell\r\n                  mode=\"selectable\"\r\n                  before={<Avatar src={player.photoUrl} />}\r\n                  onChange={() => {\r\n                    setSelectedPlayerId(\r\n                      player.id === selectedPlayerId ? null : player.id\r\n                    );\r\n                  }}\r\n                  key={player.id}\r\n                  checked={player.id === selectedPlayerId}\r\n                >\r\n                  {player.name}\r\n                </Cell>\r\n              ))}\r\n            </Group>\r\n            <Div>\r\n              <Button\r\n                size=\"l\"\r\n                stretched\r\n                mode=\"commerce\"\r\n                disabled={selectedPlayerId === null}\r\n                onClick={onPoliceCheck}\r\n              >\r\n                Проверить\r\n              </Button>\r\n            </Div>\r\n          </SplitCol>\r\n        </SplitLayout>\r\n      ) : (\r\n        <Div>Спокойной ночи!</Div>\r\n      )}\r\n      {snackbarError && (\r\n        <ErrorSnackbar\r\n          errorMessage={snackbarError}\r\n          closeSnackbar={() => setSnackbarError(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Cell,\r\n  Div,\r\n  Group,\r\n  PanelHeader,\r\n  Title,\r\n} from \"@vkontakte/vkui\";\r\nimport getPlayerById from \"../utils/getPlayerById\";\r\nimport { GameApi } from \"../api\";\r\nimport isAlive from \"../utils/isAlive\";\r\nimport getOtherPlayersAlive from \"../utils/getOtherPlayersAlive\";\r\nimport ErrorSnackbar from \"../components/ErrorSnackbar\";\r\n\r\nexport default function CivilsPage({\r\n  setActivePanel,\r\n  panelHeaderMessage,\r\n  game,\r\n  playerId,\r\n}) {\r\n  // game models\r\n  const [player, setPlayer] = useState(getPlayerById(game, playerId));\r\n  const [otherPlayers, setOtherPlayers] = useState(\r\n    getOtherPlayersAlive(game, playerId)\r\n  );\r\n  const [hasVoted, setHasVoted] = useState(false);\r\n  // ui state\r\n  const [selectedPlayerId, setSelectedPlayerId] = useState(null);\r\n  const [snackbarError, setSnackbarError] = useState(null);\r\n  // methods\r\n  const onCivilsKill = () => {\r\n    setHasVoted(true);\r\n    GameApi.civilsKill(game.id, playerId, selectedPlayerId).catch((e) => {\r\n      const errorMessage = e.response.data.message;\r\n      setSnackbarError(errorMessage);\r\n    });\r\n  };\r\n  // effects\r\n  useEffect(() => {\r\n    setPlayer(getPlayerById(game, playerId));\r\n  }, [game]);\r\n  return (\r\n    <>\r\n      <PanelHeader>{panelHeaderMessage}</PanelHeader>\r\n      {isAlive(player) && !hasVoted && (\r\n        <>\r\n          <Div>\r\n            <Title level=\"2\" weight=\"medium\">\r\n              Кого осудить??\r\n            </Title>\r\n          </Div>\r\n          <Group>\r\n            {otherPlayers.map((player) => (\r\n              <Cell\r\n                mode=\"selectable\"\r\n                before={<Avatar src={player.photoUrl} />}\r\n                onChange={() => {\r\n                  setSelectedPlayerId(\r\n                    player.id === selectedPlayerId ? null : player.id\r\n                  );\r\n                }}\r\n                key={player.id}\r\n                checked={player.id === selectedPlayerId}\r\n              >\r\n                {player.name}\r\n              </Cell>\r\n            ))}\r\n          </Group>\r\n          <Div>\r\n            <Button\r\n              size=\"l\"\r\n              stretched\r\n              mode=\"commerce\"\r\n              disabled={selectedPlayerId === null}\r\n              onClick={onCivilsKill}\r\n            >\r\n              Осудить\r\n            </Button>\r\n          </Div>\r\n        </>\r\n      )}\r\n      {isAlive(player) && hasVoted && (\r\n        <Div>Ваш голос учтен, ждем остальных игроков</Div>\r\n      )}\r\n      {!isAlive(player) && <Div>Вы мертвы</Div>}\r\n      {snackbarError && (\r\n        <ErrorSnackbar\r\n          errorMessage={snackbarError}\r\n          closeSnackbar={() => setSnackbarError(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { GamePhase, GameStatus } from \"../constants\";\r\n\r\nexport default (game) =>\r\n  game &&\r\n  game.gameStatus === GameStatus.Started &&\r\n  game.gamePhase === GamePhase.BeforeNight;\r\n","export default __webpack_public_path__ + \"static/media/playersSleep.c4c1ee3c.mp3\";","export default __webpack_public_path__ + \"static/media/playersWakeUp.8798fe3d.mp3\";","export default __webpack_public_path__ + \"static/media/mafiaSleep.150eb60b.mp3\";","export default __webpack_public_path__ + \"static/media/mafiaWakeUp.3e03da91.mp3\";","export default __webpack_public_path__ + \"static/media/policeSleep.031070aa.mp3\";","export default __webpack_public_path__ + \"static/media/policeWakeUp.2662b9d8.mp3\";","import { Howl, Howler } from \"howler\";\r\nimport playersSleep from \"./assets/playersSleep.mp3\";\r\nimport playersWakeUp from \"./assets/playersWakeUp.mp3\";\r\nimport mafiaSleep from \"./assets/mafiaSleep.mp3\";\r\nimport mafiaWakeUp from \"./assets/mafiaWakeUp.mp3\";\r\nimport policeSleep from \"./assets/policeSleep.mp3\";\r\nimport policeWakeUp from \"./assets/policeWakeUp.mp3\";\r\n\r\nexport const soundManager = {\r\n  playersSleep: new Howl({\r\n    src: [playersSleep],\r\n  }),\r\n  playersWakeUp: new Howl({\r\n    src: [playersWakeUp],\r\n  }),\r\n  mafiaSleep: new Howl({\r\n    src: [mafiaSleep],\r\n  }),\r\n  mafiaWakeUp: new Howl({\r\n    src: [mafiaWakeUp],\r\n  }),\r\n  policeSleep: new Howl({\r\n    src: [policeSleep],\r\n  }),\r\n  policeWakeUp: new Howl({\r\n    src: [policeWakeUp],\r\n  }),\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Div,\r\n  Group,\r\n  PanelHeader,\r\n  ScreenSpinner,\r\n  SplitCol,\r\n  SplitLayout,\r\n  Title,\r\n} from \"@vkontakte/vkui\";\r\nimport \"./Intro.page.css\";\r\nimport { mainPanels } from \"../routes\";\r\n\r\nexport default function IntroPage({\r\n  setActivePanel,\r\n  panelHeaderMessage,\r\n  submitHasSeenIntro,\r\n}) {\r\n  const [spinner, setSpinner] = useState(null);\r\n  const onOk = () => {\r\n    setSpinner(<ScreenSpinner />);\r\n    submitHasSeenIntro().then(() => {\r\n      setActivePanel(mainPanels.home);\r\n      setSpinner(null);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <PanelHeader>{panelHeaderMessage}</PanelHeader>\r\n      <SplitLayout popout={spinner}>\r\n        <SplitCol>\r\n          <Group>\r\n            <Div>\r\n              <Title level=\"1\" weight=\"bold\" className=\"title-1\">\r\n                Привет! 🤖\r\n              </Title>\r\n              <Title level=\"2\" weight=\"regular\" className=\"title-21\">\r\n                С этим приложением ты можешь играть в мафию без ведущего. Все\r\n                команды будет озвучивать робот-ассистент.\r\n              </Title>\r\n              <Title level=\"2\" weight=\"regular\" className=\"title-22\">\r\n                Робота будет слышно из телефона только одно игрока - создателя\r\n                комнаты. Если это ты, то убедись, что звук на телефоне включен!\r\n              </Title>\r\n            </Div>\r\n            <Div>\r\n              <Button stretched size=\"l\" mode=\"commerce\" onClick={onOk}>\r\n                ОК\r\n              </Button>\r\n            </Div>\r\n          </Group>\r\n        </SplitCol>\r\n      </SplitLayout>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AppRoot, View, Panel, Root } from \"@vkontakte/vkui\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport \"./App.css\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport { mainPanels } from \"./routes\";\r\nimport MainHomePage from \"./pages/Home.page\";\r\nimport MainCreateGamePage from \"./pages/CreateGame.page\";\r\nimport MainJoinGamePage from \"./pages/JoinGame.page\";\r\nimport MainWaitGamePage from \"./pages/WaitGame.page\";\r\nimport MainGamePage from \"./pages/Game.page\";\r\nimport { GameApi } from \"./api\";\r\nimport { GameAudioPhase } from \"./constants\";\r\nimport MafiaPage from \"./pages/Mafia.page\";\r\nimport PolicePage from \"./pages/Police.page\";\r\nimport CivilsPage from \"./pages/Civils.page\";\r\nimport isBeforeNightPhase from \"./utils/isBeforeNightPhase\";\r\nimport isMafiaTurnPhase from \"./utils/isMafiaTurnPhase\";\r\nimport isPoliceTurnPhase from \"./utils/isPoliceTurnPhase\";\r\nimport isCivilsTurnPhase from \"./utils/isCivilsTurnPhase\";\r\nimport isDiscussionPhase from \"./utils/isDiscussionPhase\";\r\nimport isGameFinished from \"./utils/isGameFinished\";\r\nimport getPlayerById from \"./utils/getPlayerById\";\r\nimport { soundManager } from \"./sound-manager\";\r\nimport IntroPage from \"./pages/Intro.page\";\r\n\r\nconst App = () => {\r\n  // game models\r\n  const [game, setGame] = useState(null);\r\n  const [playerId, setPlayerId] = useState(null);\r\n  const [playerPhotoUrl, setPlayerPhotoUrl] = useState(null);\r\n  const [gameAudioPhase, setGameAudioPhase] = useState(null);\r\n  // ui state\r\n  const [activeView, setActiveView] = useState(\"main\");\r\n  const [activePanel, setActivePanel] = useState(mainPanels.home);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  // methods\r\n  const subscribeToGame = (gameId) => {\r\n    const intervalId = setInterval(() => {\r\n      GameApi.getGame(gameId).then((responsee) => {\r\n        setGame(responsee.data);\r\n        setGameAudioPhase(responsee.data.gameAudioPhase);\r\n      });\r\n    }, 2000);\r\n    setIntervalId(intervalId);\r\n  };\r\n  const submitHasSeenIntro = () =>\r\n    bridge.send(\"VKWebAppStorageSet\", {\r\n      key: \"hasSeenIntro\",\r\n      value: \"1\",\r\n    });\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (isGameFinished(game)) {\r\n      setActivePanel(mainPanels.game);\r\n      clearInterval(intervalId);\r\n      setIntervalId(null);\r\n    }\r\n    if (isBeforeNightPhase(game) || isDiscussionPhase(game)) {\r\n      setActivePanel(mainPanels.game);\r\n    }\r\n    if (isMafiaTurnPhase(game)) {\r\n      setActivePanel(mainPanels.mafia);\r\n    }\r\n    if (isPoliceTurnPhase(game)) {\r\n      setActivePanel(mainPanels.police);\r\n    }\r\n    if (isCivilsTurnPhase(game)) {\r\n      setActivePanel(mainPanels.civils);\r\n    }\r\n  }, [game]);\r\n  useEffect(() => {\r\n    if (game) {\r\n      const player = getPlayerById(game, playerId);\r\n      if (\r\n        player.isHost &&\r\n        (gameAudioPhase !== null || gameAudioPhase !== undefined)\r\n      ) {\r\n        switch (gameAudioPhase) {\r\n          case GameAudioPhase.MafiaSleep:\r\n            soundManager.mafiaSleep.play();\r\n            break;\r\n          case GameAudioPhase.MafiaWakeUp:\r\n            soundManager.mafiaWakeUp.play();\r\n            break;\r\n          case GameAudioPhase.PlayersSleep:\r\n            soundManager.playersSleep.play();\r\n            break;\r\n          case GameAudioPhase.PlayersWakeUp:\r\n            soundManager.playersWakeUp.play();\r\n            break;\r\n          case GameAudioPhase.PoliceSleep:\r\n            soundManager.policeSleep.play();\r\n            break;\r\n          case GameAudioPhase.PoliceWakeUp:\r\n            soundManager.policeWakeUp.play();\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    }\r\n  }, [gameAudioPhase]);\r\n  useEffect(() => {\r\n    GameApi.wakeup();\r\n    bridge.send(\"VKWebAppGetUserInfo\").then((res) => {\r\n      setPlayerPhotoUrl(res.photo_200);\r\n    });\r\n    bridge\r\n      .send(\"VKWebAppStorageGet\", { keys: [\"hasSeenIntro\"] })\r\n      .then(({ keys }) => {\r\n        const hasSeenIntro = keys[0].value;\r\n        if (!hasSeenIntro) {\r\n          setActivePanel(mainPanels.intro);\r\n        }\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (activePanel === mainPanels.home && intervalId) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(null);\r\n    }\r\n  }, [activePanel]);\r\n\r\n  return (\r\n    <AppRoot>\r\n      <Root activeView={activeView}>\r\n        <View activePanel={activePanel} id=\"main\">\r\n          <Panel centered id={mainPanels.intro}>\r\n            <IntroPage\r\n              setActivePanel={setActivePanel}\r\n              panelHeaderMessage=\"Добро пожаловать!\"\r\n              submitHasSeenIntro={submitHasSeenIntro}\r\n            />\r\n          </Panel>\r\n          <Panel centered id={mainPanels.home} className=\"home-panel\">\r\n            <MainHomePage\r\n              setActivePanel={setActivePanel}\r\n              panelHeaderMessage=\"Мафия\"\r\n            />\r\n          </Panel>\r\n          <Panel id={mainPanels.createGame} className=\"create-game-panel\">\r\n            <MainCreateGamePage\r\n              setActivePanel={setActivePanel}\r\n              setGame={setGame}\r\n              setPlayerId={setPlayerId}\r\n              subscribeToGame={subscribeToGame}\r\n              panelHeaderMessage=\"Создать игру\"\r\n              playerPhotoUrl={playerPhotoUrl}\r\n            />\r\n          </Panel>\r\n          <Panel id={mainPanels.joinGame}>\r\n            <MainJoinGamePage\r\n              setActivePanel={setActivePanel}\r\n              setGame={setGame}\r\n              setPlayerId={setPlayerId}\r\n              subscribeToGame={subscribeToGame}\r\n              panelHeaderMessage=\"Присоединиться к игре\"\r\n              playerPhotoUrl={playerPhotoUrl}\r\n            />\r\n          </Panel>\r\n          <Panel id={mainPanels.waitGame}>\r\n            <MainWaitGamePage\r\n              setActivePanel={setActivePanel}\r\n              panelHeaderMessage=\"Ждем всех игроков\"\r\n              game={game}\r\n              playerId={playerId}\r\n            />\r\n          </Panel>\r\n          <Panel id={mainPanels.game}>\r\n            <MainGamePage\r\n              setActivePanel={setActivePanel}\r\n              panelHeaderMessage=\"Игра\"\r\n              game={game}\r\n              playerId={playerId}\r\n            />\r\n          </Panel>\r\n          <Panel id={mainPanels.mafia}>\r\n            <MafiaPage\r\n              setActivePanel={setActivePanel}\r\n              panelHeaderMessage=\"Ночь: ход Мафии\"\r\n              game={game}\r\n              playerId={playerId}\r\n            />\r\n          </Panel>\r\n          <Panel id={mainPanels.police}>\r\n            <PolicePage\r\n              setActivePanel={setActivePanel}\r\n              panelHeaderMessage=\"Ночь: ход Комиссара\"\r\n              game={game}\r\n              playerId={playerId}\r\n            />\r\n          </Panel>\r\n          <Panel id={mainPanels.civils}>\r\n            <CivilsPage\r\n              setActivePanel={setActivePanel}\r\n              panelHeaderMessage=\"Суд\"\r\n              game={game}\r\n              playerId={playerId}\r\n            />\r\n          </Panel>\r\n        </View>\r\n      </Root>\r\n    </AppRoot>\r\n  );\r\n};\r\nexport default App;\r\n","import { GamePhase, GameStatus } from \"../constants\";\r\n\r\nexport default (game) =>\r\n  game &&\r\n  game.gameStatus === GameStatus.Started &&\r\n  game.gamePhase === GamePhase.Discussion;\r\n","import { GamePhase, GameStatus } from \"../constants\";\r\n\r\nexport default (game) =>\r\n  game &&\r\n  game.gameStatus === GameStatus.Started &&\r\n  game.gamePhase === GamePhase.MafiaTurn;\r\n","import { GamePhase, GameStatus } from \"../constants\";\r\n\r\nexport default (game) =>\r\n  game &&\r\n  game.gameStatus === GameStatus.Started &&\r\n  game.gamePhase === GamePhase.PoliceTurn;\r\n","import { GamePhase, GameStatus } from \"../constants\";\r\n\r\nexport default (game) =>\r\n  game &&\r\n  game.gameStatus === GameStatus.Started &&\r\n  game.gamePhase === GamePhase.CivilsTurn;\r\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); // runtime download\n}\n"],"sourceRoot":""}